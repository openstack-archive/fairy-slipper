# variables in header
Content-Range:
  description: |
    The content range of image data. For details, see
    `Hypertext Transfer Protocol (HTTP/1.1): Range Requests
    <http://tools.ietf.org/html/rfc7233>`_.
  in: header
  required: false
  type: string
location:
  description: |
    The URL to access the image file from the
    external store.
  in: header
  required: true
  type: string

# variables in path
image_id:
  description: |
    The UUID of the image.
  in: path
  required: false
  type: string
member_id_1:
  description: |
    The ID of the image member. An image member is a
    tenant with whom the image is shared.
  in: path
  required: false
  type: string
name_4:
  description: |
    Name of the resource type.
  in: path
  required: false
  type: string
namespace_id:
  description: |
    The UUID of the namespace.
  in: path
  required: false
  type: string
object_name:
  description: |
    The name of the object.
  in: path
  required: false
  type: string
property_name:
  description: |
    The name of the property.
  in: path
  required: false
  type: string
tag:
  description: |
    The image tag.
  in: path
  required: false
  type: string
tag_name:
  description: |
    The name of the tag.
  in: path
  required: false
  type: string
task_id:
  description: |
    The UUID of the task.
  in: path
  required: false
  type: string

# variables in query
created_at_1:
  description: |
    Filters the response by the date and time when the resource was
    created.

    The date and time stamp format is `ISO 8601
    <https://en.wikipedia.org/wiki/ISO_8601>`_:

    ::

       CCYY-MM-DDThh:mm:ss±hh:mm

    The ``±hh:mm`` value, if included, returns the time zone as an
    offset from UTC.

    For example, ``2015-08-27T09:49:58-05:00``.

    If you omit the ``created_at`` date and time stamp, its value is
    ``null``.
  in: query
  required: false
  type: string
limit:
  description: |
    Requests a page size of items. Returns a number
    of items up to a limit value. Use the ``limit`` parameter to make
    an initial limited request and use the ID of the last-seen item
    from the response as the ``marker`` parameter value in a
    subsequent limited request.
  in: query
  required: false
  type: integer
marker:
  description: |
    The ID of the last-seen item. Use the ``limit``
    parameter to make an initial limited request and use the ID of the
    last-seen item from the response as the ``marker`` parameter value
    in a subsequent limited request.
  in: query
  required: false
  type: string
member_status:
  description: |
    Filters the response by a member status.  A valid
    value is ``accepted``, ``pending``, ``rejected``, or ``all``.
    Default is ``accepted``.
  in: query
  required: false
  type: string
name_5:
  description: |
    Filters the response by a name, as a string.  A
    valid value is the name of an image.
  in: query
  required: false
  type: string
owner_1:
  description: |
    Filters the response by a tenant ID.  Shows only
    images that are shared with this tenant owner.
  in: query
  required: false
  type: string
resource_type:
  description: |
    Filters the response by property names that start
    with a prefix from an associated resource type.  The API removes
    the prefix of the resource type from the property name in the
    response.
  in: query
  required: false
  type: integer
resource_types:
  description: |
    Filters the response by a resource type or types.
    Use the comma (``,``) character to separate multiple values. For
    example, ``OS::Glance::Image,OS::Nova::Flavor`` shows only
    namespaces for these resource types.
  in: query
  required: false
  type: integer
size_max:
  description: |
    Filters the response by a maximum image size, in
    bytes.
  in: query
  required: false
  type: string
size_min:
  description: |
    Filters the response by a minimum image size, in
    bytes.
  in: query
  required: false
  type: string
sort:
  description: |
    Sorts the response by one or more attribute and sort direction
    combinations. You can also set multiple sort keys and directions.
    Default direction is ``desc``.

    Use the comma (``,``) character to separate multiple values. For
    example:

    .. code-block:: json

       GET /v2/images?sort=name:asc,status:desc
  in: query
  required: false
  type: string
sort_dir:
  description: |
    Sorts the response by a set of one or more sort
    direction and attribute (``sort_key``) combinations. A valid value
    for the sort direction is ``asc`` (ascending) or ``desc``
    (descending). If you omit the sort direction in a set, the default
    is ``desc``.
  in: query
  required: false
  type: string
sort_key:
  description: |
    Sorts the response by an attribute, such as
    ``name``, ``id``, or ``updated_at``. Default is ``created_at``.
    The API uses the natural sorting direction of the ``sort_key``
    image attribute.
  in: query
  required: false
  type: string
status_1:
  description: |
    Filters the response by an image status.  A valid
    value is ``queued``, ``saving``, ``active``, ``killed``,
    ``deleted``, or ``pending_delete``.
  in: query
  required: false
  type: integer
status_2:
  description: |
    Filters the response by a task status. A valid
    value is ``pending``, ``processing``, ``success``, or ``failure``.
  in: query
  required: false
  type: string
tag_1:
  description: |
    Filters the response by an image tag. For
    example, ``?tag="cirros"``.
  in: query
  required: false
  type: string
type_1:
  description: |
    Filters the response by a task type. A valid
    value is ``import``.
  in: query
  required: false
  type: string
updated_at_1:
  description: |
    Filters the response by the date and time when the resource was
    updated.

    The date and time stamp format is `ISO 8601
    <https://en.wikipedia.org/wiki/ISO_8601>`_:

    ::

       CCYY-MM-DDThh:mm:ss±hh:mm

    The ``±hh:mm`` value, if included, is the time zone as an offset
    from UTC.

    For example, ``2015-08-27T09:49:58-05:00``.

    If you omit the time zone, the UTC time zone is assumed.

    If you omit the ``updated_at`` date and time stamp, its value is
    ``null``.
  in: query
  required: false
  type: string
visibility_3:
  description: |
    Filters the response by an image visibility value
    or values.  Use the comma (``,``) character to separate multiple
    values. A valid value is ``public``, ``private``, or ``shared``.
    If you omit this parameter, the response shows ``public``,
    ``private``, and ``shared`` images with a member status of
    ``accepted``.
  in: query
  required: false
  type: string
visibility_4:
  description: |
    Filters the response by a namespace visibility
    value.  A valid value is ``public`` or ``private``. If you omit
    this parameter, the response shows ``public`` and ``private``
    namespaces.
  in: query
  required: false
  type: string

# variables in body
additionalItems:
  description: |
    Describes extra items, if you use tuple typing .
    If the value of ``items`` is an array (tuple typing) and the
    instance is longer than the list of schemas in ``items``, the
    additional items are described by the schema in this property.  If
    this value is ``false``, the instance cannot be longer than the
    list of schemas in ``items``.  If this value is ``true``, that is
    equivalent to the empty schema (anything goes).
  in: body
  required: false
  type: string
additionalItems_1:
  description: |
    Describes extra items, if you use tuple typing .
    If the value of ``items`` is an array (tuple typing) and the
    instance is longer than the list of schemas in ``items``, the
    additional items are described by the schema in this property.  If
    this value is ``false``, the instance cannot be longer than the
    list of schemas in ``items``.  If this value is ``true``, that is
    equivalent to the empty schema (anything goes).
  in: body
  required: true
  type: string
checksum:
  description: |
    Hash that is used over the image data. The Image
    service uses this value for verification.  The value might be
    ``null`` (JSON null data type).
  in: body
  required: true
  type: string
container_format:
  description: |
    Format of the container. A valid value is
    ``ami``, ``ari``, ``aki``, ``bare``, ``ovf``, ``ova``, or
    ``docker``.
  in: body
  required: false
  type: string
container_format_1:
  description: |
    The container format of the image.  The value
    might be ``null`` (JSON null data type).
  in: body
  required: true
  type: string
created_at:
  description: |
    The date and time when the resource was created.

    The date and time stamp format is `ISO 8601
    <https://en.wikipedia.org/wiki/ISO_8601>`_:

    ::

       CCYY-MM-DDThh:mm:ss±hh:mm

    For example, ``2015-08-27T09:49:58-05:00``.

    The ``±hh:mm`` value, if included, is the time zone as an offset
    from UTC.
  in: body
  required: true
  type: string
default:
  description: |
    Default property description.
  in: body
  required: false
  type: string
default_1:
  description: |
    Default property description.
  in: body
  required: true
  type: string
description:
  description: |
    The description of the namespace.
  in: body
  required: true
  type: string
description_1:
  description: |
    Detailed description for the namespace.
  in: body
  required: false
  type: string
description_2:
  description: |
    The description of the property.
  in: body
  required: false
  type: string
description_3:
  description: |
    The description of the property.
  in: body
  required: true
  type: string
direct_url:
  description: |
    The URL to access the image file kept in external
    store. It appears when you set the ``show_image_direct_url``
    option to ``true`` in the Image service ' s configuration file.
  in: body
  required: true
  type: string
disk_format:
  description: |
    The format of the disk. A valid value is ``ami``,
    ``ari``, ``aki``, ``vhd``, ``vmdk``, ``raw``, ``qcow2``, ``vdi``,
    or ``iso``.
  in: body
  required: false
  type: string
disk_format_1:
  description: |
    The disk format of the image.  The value might be
    ``null`` (JSON null data type).
  in: body
  required: true
  type: string
display_name:
  description: |
    User-friendly name to use in a UI to display the
    namespace name.
  in: body
  required: true
  type: string
display_name_1:
  description: |
    User-friendly name to use in a UI to display the
    namespace name.
  in: body
  required: false
  type: string
enum:
  description: |
    Enumerated list of property values.
  in: body
  required: true
  type: array
enum_1:
  description: |
    Enumerated list of property values.
  in: body
  required: false
  type: array
file:
  description: |
    The URL for the virtual machine image file.
  in: body
  required: true
  type: string
first:
  description: |
    The URL for the first page of response.
  in: body
  required: true
  type: string
hypervisor_type:
  description: |
    Hypervisor type of property values.
  in: body
  required: true
  type: object
id:
  description: |
    A unique, user-defined image UUID, in the format:

    ::

       nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn

    Where **n** is a hexadecimal digit from 0 to f, or F.

    For example:

    ::

       b2173dd3-7ad6-4362-baa6-a68bce3565cb

    If you omit this value, the API generates a UUID for the image.
  in: body
  required: false
  type: string
id_1:
  description: |
    The UUID of the image.
  in: body
  required: true
  type: string
id_2:
  description: |
    The UUID of the task.
  in: body
  required: true
  type: string
images:
  description: |
    A list of ``image`` objects.
  in: body
  required: true
  type: array
items:
  description: |
    Schema for the items in an array.
  in: body
  required: false
  type: string
items_1:
  description: |
    Schema for the items in an array.
  in: body
  required: true
  type: string
locations:
  description: |
    A list of URLs to access the image file in
    external store. This list appears if the
    ``show_multiple_locations`` option is set to ``true`` in the Image
    service ' s configuration file.
  in: body
  required: true
  type: array
maxItems:
  description: |
    Maximum length of an array.
  in: body
  required: false
  type: string
maxItems_1:
  description: |
    Maximum length of an array.
  in: body
  required: true
  type: string
maxLength:
  description: |
    Maximum allowed string length.
  in: body
  required: false
  type: string
maxLength_1:
  description: |
    Maximum allowed string length.
  in: body
  required: true
  type: string
maximum:
  description: |
    Maximum allowed numerical value.
  in: body
  required: false
  type: string
maximum_1:
  description: |
    Maximum allowed numerical value.
  in: body
  required: true
  type: string
member:
  description: |
    The ID of the image member. An image member is a
    tenant with whom the image is shared.  This call accepts either
    the ``member_id`` or ``member`` attribute in the request body. If
    you specify both attributes, the API uses the ``member_id`` value
    and ignores the ``member`` value. Use of the ``member`` attribute
    is supported but deprecated. Use of the ``member_id`` attribute is
    preferred.
  in: body
  required: false
  type: string
member_id:
  description: |
    The ID of the image member. An image member is a
    tenant with whom the image is shared.  This call accepts either
    the ``member_id`` or ``member`` attribute in the request body. If
    you specify both attributes, the API uses the ``member_id`` value
    and ignores the ``member`` value. Use of the ``member`` attribute
    is supported but deprecated. Use of the ``member_id`` attribute is
    preferred.
  in: body
  required: false
  type: string
members:
  description: |
    A list of ``member`` objects. Each ``member``
    object describes a member with whom this image is being shared.
  in: body
  required: true
  type: array
metadata:
  description: |
    The location metadata.
  in: body
  required: true
  type: object
minItems:
  description: |
    Minimum length of an array.
  in: body
  required: false
  type: string
minItems_1:
  description: |
    Minimum length of an array.
  in: body
  required: true
  type: string
minLength:
  description: |
    Minimum allowed string length.
  in: body
  required: false
  type: string
minLength_1:
  description: |
    Minimum allowed string length.
  in: body
  required: true
  type: string
min_disk:
  description: |
    Amount of disk space in GB that is required to
    boot the image.
  in: body
  required: false
  type: integer
min_disk_1:
  description: |
    The minimum disk size in GB that is required to
    boot the image.  The value might be ``null`` (JSON null data
    type).
  in: body
  required: true
  type: integer
min_ram:
  description: |
    Amount of RAM in MB that is required to boot the
    image.
  in: body
  required: false
  type: integer
min_ram_1:
  description: |
    The minimum amount of RAM in MB that is required
    to boot the image.  The value might be ``null`` (JSON null data
    type).
  in: body
  required: true
  type: integer
minimum:
  description: |
    Minimum allowed numerical value.
  in: body
  required: false
  type: string
minimum_1:
  description: |
    Minimum allowed numerical value.
  in: body
  required: true
  type: string
name:
  description: |
    The name of the tag.
  in: body
  required: true
  type: string
name_1:
  description: |
    Name for the image. Note that the name of an
    image is not unique to an Image service node. The API cannot
    expect users to know the names of images that other users own.
  in: body
  required: false
  type: string
name_2:
  description: |
    The name of the property.
  in: body
  required: true
  type: string
name_3:
  description: |
    Name of the resource type.
  in: body
  required: true
  type: string
name_6:
  description: |
    The name of the resource type.
  in: body
  required: true
  type: string
name_7:
  description: |
    The name of the image.  Value might be ``null``
    (JSON null data type).
  in: body
  required: true
  type: string
namespace:
  description: |
    The namespace is unique across all users.
  in: body
  required: true
  type: string
namespaces:
  description: |
    A list of ``namespace`` objects.
  in: body
  required: true
  type: array
objects:
  description: |
    One or more object definitions of the namespace.
  in: body
  required: true
  type: string
objects_1:
  description: |
    Namespace object definitions, if any.
  in: body
  required: false
  type: object
op:
  description: |
    The operation. A valid value is:  - ``add``. Adds
    a property or location in the image.  - ``remove``. Removes an
    image ' s property or location.  - ``replace``. Replaces the value
    of an image ' s property or   location.
  in: body
  required: true
  type: string
operators:
  description: |
    Operators property description.
  in: body
  required: false
  type: string
operators_1:
  description: |
    Operators property description.
  in: body
  required: true
  type: string
owner:
  description: |
    The ID of the owner, or tenant, of the image.
    The value might be ``null`` (JSON null data type).
  in: body
  required: true
  type: string
path:
  description: |
    An image property.
  in: body
  required: true
  type: string
pattern:
  description: |
    A regular expression ( `ECMA 262
    <http://www.ecma-
    international.org/publications/standards/Ecma-262.htm>`_ ) that a
    string value must match.
  in: body
  required: false
  type: string
pattern_1:
  description: |
    A regular expression (ECMA 262) that a string
    value must match.
  in: body
  required: true
  type: string
prefix:
  description: |
    Prefix for any properties in the namespace that
    you want to apply to the resource type. If you specify a prefix,
    you must append a prefix separator, such as the colon (``:``)
    character.
  in: body
  required: false
  type: string
properties:
  description: |
    The image properties, if any.
  in: body
  required: false
  type: object
properties_1:
  description: |
    One or more property definitions for the
    namespace.
  in: body
  required: true
  type: object
properties_2:
  description: |
    Namespace property definitions, if any.
  in: body
  required: false
  type: object
properties_3:
  description: |
    A list of ``property`` objects.
  in: body
  required: true
  type: array
properties_4:
  description: |
    The image properties, if any.
  in: body
  required: true
  type: object
properties_target:
  description: |
    Some resource types allow more than one key and
    value pair for each instance. For example, the Image service
    allows both user and image metadata on volumes. The
    ``properties_target`` parameter enables a namespace target to
    remove the ambiguity.
  in: body
  required: false
  type: string
protected:
  description: |
    Image protection for deletion. Valid value is
    ``true`` or ``false``. Default is ``false``.
  in: body
  required: false
  type: boolean
protected_1:
  description: |
    Namespace protection for deletion. A valid value
    is ``true`` or ``false``. Default is ``false``.
  in: body
  required: true
  type: string
protected_2:
  description: |
    Namespace protection for deletion. Valid value is
    ``true`` or ``false``. Default is ``false``.
  in: body
  required: false
  type: boolean
protected_3:
  description: |
    Image protection for deletion. A valid value is
    ``true`` or ``false``. Default is ``false``.
  in: body
  required: true
  type: boolean
readonly:
  description: |
    Indicates whether this is a read-only property.
  in: body
  required: false
  type: boolean
readonly_1:
  description: |
    Indicates whether this is a read-only property.
  in: body
  required: true
  type: boolean
resource_type_associations:
  description: |
    One or more namespace resource types.
  in: body
  required: true
  type: string
resource_type_associations_1:
  description: |
    Namespace resource types, if any.
  in: body
  required: false
  type: object
schema:
  description: |
    The URL for schema of the member.
  in: body
  required: true
  type: string
schema_1:
  description: |
    The URL for schema of the virtual machine image.
  in: body
  required: true
  type: string
schema_2:
  description: |
    The URL for schema of the members.
  in: body
  required: true
  type: string
schema_3:
  description: |
    The URL for schema of the virtual machine images.
  in: body
  required: true
  type: string
self:
  description: |
    The URL for the virtual machine image.
  in: body
  required: true
  type: string
size:
  description: |
    The size of the image data, in bytes.  The value
    might be ``null`` (JSON null data type).
  in: body
  required: true
  type: integer
status:
  description: |
    The image status.
  in: body
  required: true
  type: string
status_3:
  description: |
    The current status of this task. The value can be
    "pending", "processing", "success" or "failure".
  in: body
  required: true
  type: string
status_4:
  description: |
    The status of this image member.
  in: body
  required: true
  type: string
tags:
  description: |
    Image tags.
  in: body
  required: false
  type: array
tags_1:
  description: |
    A list of ``tag`` objects.
  in: body
  required: true
  type: array
tasks:
  description: |
    A list of ``task`` objects.
  in: body
  required: true
  type: array
title:
  description: |
    The title of the property.
  in: body
  required: true
  type: string
type:
  description: |
    The property type.
  in: body
  required: true
  type: string
type_2:
  description: |
    The type of task represented by this content.
  in: body
  required: true
  type: string
uniqueItems:
  description: |
    Indicates whether all values in the array must be
    distinct.
  in: body
  required: false
  type: string
uniqueItems_1:
  description: |
    Indicates whether all values in the array must be
    distinct.
  in: body
  required: true
  type: string
updated_at:
  description: |
    The date and time when the resource was updated.

    The date and time stamp format is `ISO 8601
    <https://en.wikipedia.org/wiki/ISO_8601>`_:

    ::

       CCYY-MM-DDThh:mm:ss±hh:mm

    For example, ``2015-08-27T09:49:58-05:00``.

    The ``±hh:mm`` value, if included, is the time zone as an offset
    from UTC. In the previous example, the offset value is ``-05:00``.

    If the ``updated_at`` date and time stamp is not set, its value is
    ``null``.
  in: body
  required: true
  type: string
url:
  description: |
    The URL to access the image file kept in external
    store.
  in: body
  required: true
  type: string
value:
  description: |
    Value of image property used in add or replace
    operations expressed in JSON notation. For example, you must
    enclose strings in quotation marks, and you do not enclose numeric
    values in quotation marks.
  in: body
  required: true
  type: string
virtual_size:
  description: |
    The virtual size of the image.  The value might
    be ``null`` (JSON null data type).
  in: body
  required: true
  type: integer
visibility:
  description: |
    Image visibility. Valid value is ``public`` or
    ``private``. Default is ``public``.
  in: body
  required: false
  type: string
visibility_1:
  description: |
    The namespace visibility. A valid value is
    ``public`` or ``private``. Default is ``private``.
  in: body
  required: true
  type: string
visibility_2:
  description: |
    Namespace visibility. Valid value is ``public``
    or ``private``. Default is ``private``.
  in: body
  required: false
  type: string
visibility_5:
  description: |
    The image visibility. A valid value is ``public``
    or ``private``. Default is ``private``.
  in: body
  required: true
  type: string

